version: '3.8'

services:
  # Secure File Upload Application
  secure-file-upload:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: secure-file-upload-app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - LOG_LEVEL=info
      - MAX_FILE_SIZE_MB=10
      - STORAGE_PATH=/app/uploads
      - LOG_PATH=/app/logs
      - SESSION_SECRET=${SESSION_SECRET:-your-super-secret-session-key-change-in-production}
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
    volumes:
      # Mount uploads directory for persistence
      - uploads_data:/app/uploads
      # Mount logs directory for log persistence
      - logs_data:/app/logs
      # Mount data directory for database persistence
      - data_data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
    networks:
      - secure-network

  # Redis for session storage (optional, for production)
  redis:
    image: redis:7-alpine
    container_name: secure-file-upload-redis
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-secure-redis-password}
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - secure-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    cap_drop:
      - ALL

  # Nginx reverse proxy (optional, for production)
  nginx:
    image: nginx:alpine
    container_name: secure-file-upload-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - secure-file-upload
    restart: unless-stopped
    networks:
      - secure-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /var/cache/nginx
      - /var/run
    cap_drop:
      - ALL
    cap_add:
      - CHOWN
      - SETGID
      - SETUID
      - NET_BIND_SERVICE

volumes:
  uploads_data:
    driver: local
  logs_data:
    driver: local
  data_data:
    driver: local
  redis_data:
    driver: local

networks:
  secure-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
